package com.kh.springdb.service;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.kh.springdb.model.Comments;
import com.kh.springdb.model.Product;
import com.kh.springdb.repository.CommentRepository;
import com.kh.springdb.repository.ProductRepository;

@Service
public class CommentService {
	
	@Autowired
	private CommentRepository commentRepository;
	
	@Autowired
	private ProductRepository productRepository;
	
	//댓글 추가 메서드 작성
	public Comments addComment(int productId, String content) {
		Product product = productRepository.findById(productId).orElse(null);
		
	//만약에 상품이 존재하지 않을 경우
	//댓글 또한 존재하지 않으므로
	//댓글이 존재할 수 없음을 예외처리 함
		if(product == null) {
			throw new RuntimeException("찾을 상품은 존재하지 않습니다.");
		}
		
		//댓글 생성하기 위한 생성자 작성
		Comments comment = new Comments();
		comment.setProduct(product);
		comment.setContent(content);
		comment.setCommentCreateDate(LocalDateTime.now());
		
	return commentRepository.save(comment);
	}
	
	//댓글 순서정렬 및 페이지네이션
	public Page<Comments> getCommentsList(int page) {
		Pageable commentsPageable = PageRequest.of(page, 10, Sort.by("commentCreateDate").descending());
		return commentRepository.findAll(commentsPageable);
		
	}
	
	//댓글 수정하기 위한 서비스 코드
	public Optional<Comments> getCommentById(Long id){
		return commentRepository.findById(id);
	}
	
	//댓글 삭제하기
	public void deleteComment(Long id, int productId) {
		commentRepository.deleteById(id);
	}
	
}